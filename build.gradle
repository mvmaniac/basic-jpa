plugins {
  id 'org.springframework.boot' version '3.4.4'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'java'
}

group = 'io.devfactory'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'

  implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.10.0'
  implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

  implementation 'org.mapstruct:mapstruct:1.6.3'
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

  implementation "com.querydsl:querydsl-jpa:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
  annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
  annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
  annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'org.postgresql:postgresql'
  runtimeOnly 'com.mysql:mysql-connector-j'

  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
  testCompileOnly 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
  useJUnitPlatform()
}

tasks.named('compileJava') {
  inputs.files(tasks.named('processResources'))
}

// queryDsl QDomain 경로 설정 (최신 버전 기준 eclipse의 경우 설정되어 있어야 할듯?)
def querydslDir = layout.buildDirectory.dir("generated/sources/annotationProcessor/java/main").get().asFile

sourceSets {
  main.java.srcDir querydslDir
}
